from abc import ABC
from typing import Dict, List

from darelabdb.utils_schemas.field_recommendation import FieldRecommendation
from darelabdb.utils_schemas.item import Item
from darelabdb.utils_schemas.item_recommendation import ItemRecommendation
from darelabdb.utils_schemas.user_state import UserState


class Logger(ABC):
    def log_item_recommendation(
        self, user_state: UserState, recommendations: List[ItemRecommendation]
    ) -> None:
        """
        Logs the item recommendations generated.

        Args:
            user_state: The item id that the user is currently interacting and a history of past interactions
            recommendations: The recommendations generated by the item recommender

        """
        pass

    def log_field_recommendation(
        self,
        text_attributes: Dict[str, str],
        recommendations: List[FieldRecommendation],
    ) -> None:
        """
        Logs the field recommendations generated.

        Args:
            text_attributes: A dictionary with the names and the values of a set of text attributes.
            recommendations: The recommendations generated by the field recommender
        """
        pass
