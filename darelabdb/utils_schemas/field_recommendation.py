from typing import Any, Dict

import pydantic
from pydantic import model_serializer


class FieldRecommendation(pydantic.BaseModel):
    """
    The **FieldRecommendation model** represents a recommended field generated by a recommender.
    It includes a recommended value for the Field and the score of the recommendation.

    **Example**
    ```python
    field_rec = FieldRecommendation(
                 value='science',
                 score=0.6
                )
    ```

    **Arguments**

    * `value (str)`: The recommended value for a field.
    * `score (float)`: [0,1] The score of the recommendation. The score is a measure that varies depending on the
        recommender being used. For the MetadataFieldRecommender, the score represents the frequency of the value in the
        most similar items. Generally, the bigger the score, the better the recommendation.
    """

    value: Any
    score: float

    model_config = pydantic.ConfigDict(extra="forbid")

    @model_serializer
    def serialize_recommendation(self) -> Dict[str, Any]:
        return {"value": str(self.value), "score": str(self.score)}
